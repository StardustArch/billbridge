package services

import (
	"billbridge/models"
	"bytes"
	"fmt"

	"github.com/jung-kurt/gofpdf"
)

type PDF struct{}

func NewPDFService() *PDF {
	return &PDF{}
}

func (p *PDF) GeneratePDFBytes(invoice *models.Invoice) ([]byte, error) {
	pdf := gofpdf.New("P", "mm", "A4", "")
	pdf.SetMargins(20, 20, 20)
	pdf.AddPage()

	// Definir cores
	darkText := []int{51, 51, 51}       // #333
	primaryColor := []int{108, 99, 255} // #6c63ff
	lightGray := []int{244, 245, 250}   // #f4f5fa

	// Título
	pdf.SetFont("Helvetica", "B", 20)
	pdf.SetTextColor(primaryColor[0], primaryColor[1], primaryColor[2])
	pdf.CellFormat(0, 12, "Invoice", "", 1, "L", false, 0, "")
	pdf.Ln(2)

	// Linha divisória primária
	pdf.SetDrawColor(primaryColor[0], primaryColor[1], primaryColor[2])
	pdf.Line(20, pdf.GetY(), 190, pdf.GetY())
	pdf.Ln(6)

	// Caixa de detalhes
	pdf.SetFillColor(lightGray[0], lightGray[1], lightGray[2])
	pdf.Rect(20, pdf.GetY(), 170, 85, "F")

	pdf.SetY(pdf.GetY() + 5)
	pdf.SetX(25)
	pdf.SetFont("Helvetica", "", 12)

	// Função para adicionar linha com label colorido e valor normal
	addStyledLine := func(label, value string) {
		pdf.SetX(25)
		pdf.SetTextColor(primaryColor[0], primaryColor[1], primaryColor[2])
		pdf.CellFormat(50, 8, label, "", 0, "L", false, 0, "")
		pdf.SetTextColor(darkText[0], darkText[1], darkText[2])
		pdf.CellFormat(100, 8, value, "", 1, "L", false, 0, "")
	}

	addStyledLine("Job Name:", invoice.JobName)
	addStyledLine("Provider:", invoice.ProviderName)
	addStyledLine("Client:", invoice.ClientName)
	addStyledLine("Country / Region:", fmt.Sprintf("%s / %s", invoice.Country, invoice.Region))
	addStyledLine("Issue Date:", invoice.IssueDate.Format("2006-01-02"))
	addStyledLine("Due Date:", invoice.DueDate.Format("2006-01-02"))
	addStyledLine("Total Amount:", fmt.Sprintf("%.2f %s", invoice.TotalAmount, invoice.Currency))
	addStyledLine("Tax Amount:", fmt.Sprintf("%.2f", invoice.TaxAmount))
	addStyledLine("Status:", invoice.Status)

	// pdf.Ln(20)

	// Rodapé com cor primária
	pdf.SetY(230)
	pdf.SetFont("Helvetica", "I", 10)
	pdf.SetTextColor(primaryColor[0], primaryColor[1], primaryColor[2])
	pdf.CellFormat(0, 10, "Generated by BillBridge", "", 0, "C", false, 0, "")

	var buf bytes.Buffer
	if err := pdf.Output(&buf); err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}
